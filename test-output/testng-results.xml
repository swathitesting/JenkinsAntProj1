<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="3" total="11" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Learning TestNG" duration-ms="77" started-at="2017-09-15T21:54:24Z" finished-at="2017-09-15T21:54:24Z">
    <groups>
    </groups>
    <test name="RegisterTest" duration-ms="13" started-at="2017-09-15T21:54:24Z" finished-at="2017-09-15T21:54:24Z">
      <class name="Testcases.RegTest">
        <test-method status="FAIL" signature="registerTest()[pri:0, instance:Testcases.RegTest@357246de]" name="registerTest" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[error message expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: error message expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Testcases.RegTest.registerTest(RegTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerTest -->
      </class> <!-- Testcases.RegTest -->
    </test> <!-- RegisterTest -->
    <test name="Application Test" duration-ms="11" started-at="2017-09-15T21:54:24Z" finished-at="2017-09-15T21:54:24Z">
      <class name="Testcases.ApplicationTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="beforeTest" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="LoginTest()[pri:1, instance:Testcases.ApplicationTest@445b84c0]" name="LoginTest" duration-ms="1" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[some reason]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: some reason
	at Testcases.ApplicationTest.LoginTest(ApplicationTest.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="PassWordChangeTest()[pri:2, instance:Testcases.ApplicationTest@445b84c0]" name="PassWordChangeTest" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassWordChangeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="LogoutTest()[pri:3, instance:Testcases.ApplicationTest@445b84c0]" name="LogoutTest" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogoutTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="afterTest" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Testcases.ApplicationTest -->
    </test> <!-- Application Test -->
    <test name="assert_softassert" duration-ms="12" started-at="2017-09-15T21:54:24Z" finished-at="2017-09-15T21:54:24Z">
      <class name="Testcases.assert_softAssert">
        <test-method status="FAIL" signature="RegisterTest()[pri:0, instance:Testcases.assert_softAssert@4563e9ab]" name="RegisterTest" duration-ms="5" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	expected [aaaaa] but found [bbbbb],
	expected [Q] but found [P]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	expected [aaaaa] but found [bbbbb],
	expected [Q] but found [P]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at Testcases.assert_softAssert.RegisterTest(assert_softAssert.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterTest -->
      </class> <!-- Testcases.assert_softAssert -->
    </test> <!-- assert_softassert -->
    <test name="LoginTest_Parameterise" duration-ms="17" started-at="2017-09-15T21:54:24Z" finished-at="2017-09-15T21:54:24Z">
      <class name="Testcases.LoginTest_ParameteriseTests">
        <test-method status="PASS" signature="doLoginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:Testcases.LoginTest_ParameteriseTests@725bef66]" name="doLoginTest" duration-ms="1" started-at="2017-09-15T22:54:24Z" data-provider="getData" finished-at="2017-09-15T22:54:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mozilla]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pass]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[998765443]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLoginTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:Testcases.LoginTest_ParameteriseTests@725bef66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="doLoginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:Testcases.LoginTest_ParameteriseTests@725bef66]" name="doLoginTest" duration-ms="0" started-at="2017-09-15T22:54:24Z" data-provider="getData" finished-at="2017-09-15T22:54:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[U2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mozilla]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pass]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[998765443]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLoginTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:Testcases.LoginTest_ParameteriseTests@725bef66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="doLoginTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)[pri:0, instance:Testcases.LoginTest_ParameteriseTests@725bef66]" name="doLoginTest" duration-ms="0" started-at="2017-09-15T22:54:24Z" data-provider="getData" finished-at="2017-09-15T22:54:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[U3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Mozilla]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pass]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[998765443]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLoginTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:Testcases.LoginTest_ParameteriseTests@725bef66]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Testcases.LoginTest_ParameteriseTests -->
    </test> <!-- LoginTest_Parameterise -->
    <test name="Using_SoftAssert" duration-ms="19" started-at="2017-09-15T21:54:24Z" finished-at="2017-09-15T21:54:24Z">
      <class name="Testcases.Using_SoftAssert">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:Testcases.Using_SoftAssert@7e0babb1]" name="beforeTest" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:Testcases.Using_SoftAssert@7e0babb1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="LoginTest()[pri:1, instance:Testcases.Using_SoftAssert@7e0babb1]" name="LoginTest" duration-ms="3" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	error message 1 ,
	expected [B] but found [A]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	error message 1 ,
	expected [B] but found [A]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at Testcases.Using_SoftAssert.LoginTest(Using_SoftAssert.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:Testcases.Using_SoftAssert@7e0babb1]" name="afterMethod" is-config="true" duration-ms="1" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="PassWordChangeTest()[pri:2, instance:Testcases.Using_SoftAssert@7e0babb1]" name="PassWordChangeTest" duration-ms="0" started-at="2017-09-15T22:54:24Z" depends-on-methods="Testcases.Using_SoftAssert.LoginTest" finished-at="2017-09-15T22:54:24Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Using_SoftAssert.PassWordChangeTest()[pri:2, instance:Testcases.Using_SoftAssert@7e0babb1] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Using_SoftAssert.PassWordChangeTest()[pri:2, instance:Testcases.Using_SoftAssert@7e0babb1] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PassWordChangeTest -->
        <test-method status="SKIP" signature="LogoutTest()[pri:3, instance:Testcases.Using_SoftAssert@7e0babb1]" name="LogoutTest" duration-ms="0" started-at="2017-09-15T22:54:24Z" depends-on-methods="Testcases.Using_SoftAssert.LoginTest" finished-at="2017-09-15T22:54:24Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Using_SoftAssert.LogoutTest()[pri:3, instance:Testcases.Using_SoftAssert@7e0babb1] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Using_SoftAssert.LogoutTest()[pri:3, instance:Testcases.Using_SoftAssert@7e0babb1] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1033)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:393)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LogoutTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Testcases.Using_SoftAssert@7e0babb1]" name="afterTest" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- Testcases.Using_SoftAssert -->
    </test> <!-- Using_SoftAssert -->
    <test name="Objectclass_Demo" duration-ms="0" started-at="2017-09-15T21:54:24Z" finished-at="2017-09-15T21:54:24Z">
      <class name="Testcases.ApplicationTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="beforeSuite" is-config="true" duration-ms="9" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:Testcases.Using_SoftAssert@7e0babb1]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:Testcases.ApplicationTest@445b84c0]" name="afterSuite" is-config="true" duration-ms="1" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:Testcases.Using_SoftAssert@7e0babb1]" name="afterSuite" is-config="true" duration-ms="0" started-at="2017-09-15T22:54:24Z" finished-at="2017-09-15T22:54:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Testcases.ApplicationTest -->
    </test> <!-- Objectclass_Demo -->
  </suite> <!-- Learning TestNG -->
</testng-results>
